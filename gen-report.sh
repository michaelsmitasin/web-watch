#! /usr/bin/bash

### Load variables from settings.conf

SETTINGSFILE="./settings.conf"
. $SETTINGSFILE

COUNTPERMAIL="20"
### default recipient
FROMADDR="webwatch@smitasin.com"
RCPTS="webwatchrcpt@smitasin.com"

### DEFAULT STATUSES
STATUSES="OK|HIJACKED|VULNERABLE|BROKEN|REVIEW"

### FUNCTIONS

CHECKDEPENDENCIES(){
	DEPENDENCIES="$(cat dependency_list)"
	for DEPENDENCY in $DEPENDENCIES
	do
		if [ -z $(which $DEPENDENCY) ]
		then
			echo "Error: dependency missing: $DEPENDENCY"
			exit 1
		fi
	done
}

USAGE(){
	echo "$0"
	echo " -s <statuses>	REGEX of statuses, i.e. \"HIJACKED|VULNERABLE\""
	echo " -r <screenshotdir>	Screenshot directory to report on"
	echo " -R <resultfile>	Result file"
	echo " -t <email>	email address to send report to"
	echo ""
	echo "Ex: $0 -s \"HIJACKED|VULNERABLE\" -r \"SCREENSHOTS/2025-04-17T09:00\" -R RESULTS/2025-04-23T12:25-qVpXpMda -t security@example.com"
	exit 1
}

####

SETPOSITION(){
	mkdir -p $SPLITPATH
	grep -E "$STATUSES" $RESULTFILE | grep -v "^$" > $SPLITPATH/total
	split -d -a5 -l $COUNTPERMAIL $SPLITPATH/total $SPLITPATH/split_
	SPLITS=$(find $SPLITPATH -xdev -type f -name "split_*")
	STARTPOSITION="1"
	ENDPOSITION="$(cat $SPLITPATH/total | wc -l)"
	STARTPAGE="1"
	ENDPAGE=$(echo "$SPLITS" | wc -l)
}

### loop over results to generate X number of results per email

GENREPORT(){
if [ -z $SCREENSHOTDIR ]
then
	USAGE
fi

while [ $STARTPOSITION -le $ENDPOSITION ]
do

STARTPOSITION=$(echo "$STARTPOSITION + $COUNTPERMAIL" | bc)

RESULTS=$(grep -E "$STATUSES" $RESULTFILE | grep -v "^$" | sort -dk2 -t ',' | tr ' ' '_' | tr -d '"' | head -$STARTPOSITION | tail -$COUNTPERMAIL)

MAKEBODY(){
	echo "From: $FROMADDR"
	echo "To: $RCPTS"
	echo "Subject: [web-watch] Statuses: $STATUSES - page $STARTPAGE / $ENDPAGE"
	echo "Mime-Version: 1.0"
	echo "Content-Type: multipart/mixed; boundary=\"20250411ABCDE\""
	echo ""
	echo "--20250411ABCDE"
	echo "Content-Type: text/plain; charset=\"US-ASCII\""
	echo "Content-Transfer-Encoding: 7bit"
	echo "Content-Disposition: inline"
	echo ""
	echo "The below sites were analyzed by web-watch and determined to have the following statuses: $STATUSES."
	echo "Review them and reach out to the site owners if they are true-positives."
	echo "If a site on here is a false-positive, you can update the prompt for the next evaluation."
	echo "Note: be general with your guidelines, we don't want to build a very long list of specific criteria"
	echo ""
	echo "Total stats from this run:"
	echo "$(cat $RESULTFILE | grep -v "^$" | cut -d',' -f2 | sort | uniq -c | sort -nrk1 | tr '\n' ',' | sed 's/,$//g') / $(find $SCREENSHOTDIR -xdev -type f | wc -l | sed 's/ //g') TOTAL"
	echo ""
	echo "Screenshot directory: $SCREENSHOTDIR"
	echo "Generated by $0"
	echo ""
	echo "----"
	echo ""
	echo ""
	echo ""
	echo "--20250411ABCDE"
	echo "Content-Type: text/plain; charset=\"US-ASCII\""
	echo "Content-Transfer-Encoding: 7bit"
	echo "Content-Disposition: inline"
	echo ""
	### Output the text results, and convert the filename to a clickable link (generally works, but not always)
	for RESULT in $RESULTS
	do
		BASENAME=$(echo "$RESULT" | cut -d',' -f-1)
		FILENAME="$( find $SCREENSHOTDIR -xdev -name "$BASENAME" -type f)"
		echo "$RESULT" | tr '_' ' ' | sed 's/---/:\/\//g' | sed 's/-80.jpeg//g;s/-443.jpeg//g;s/-8443\.jpeg/:8443/g' 
	done
	echo ""
	### attach files
	for RESULT in $RESULTS
	do
		BASENAME=$(echo "$RESULT" | cut -d',' -f-1)
		FILENAME="$( find $SCREENSHOTDIR -xdev -name "$BASENAME" -type f)"
		echo ""
		echo "--20250411ABCDE"
		echo "Content-Type: application;"
		echo "Content-Transfer-Encoding: base64"
		echo "Content-Disposition: attachment; filename=\"$(basename $FILENAME)\""
		echo ""
		base64 $FILENAME 
		echo ""
	done
	echo "--20250411ABCDE"
}

MAKEBODY | /usr/sbin/sendmail -t

STARTPAGE=$(echo "$STARTPAGE + 1" | bc)

sleep 10

done
}

####

if [ -z "$1" ]
then
        USAGE
fi

while [ $# -gt 0 ]
do
    unset OPTIND
    unset OPTARG
    while getopts R:r:s:t: OPTIONS
    do
    case $OPTIONS in
            s) STATUSES="$OPTARG";;
            r) SCREENSHOTDIR="$OPTARG"; SPLITPATH="$SCREENSHOTDIR/SPLIT";;
            R) RESULTFILE="$OPTARG";;
            t) RCPTS="$OPTARG";;
            *) echo "Uh oh, unrecognized option"; exit 1;;
        esac
   done
   shift $((OPTIND-1))
   ARGS="${ARGS} $1 "
   shift
done

if [ -z "$SCREENSHOTDIR" ]
then
	USAGE
fi

if [ -z "$RESULTFILE" ]
then
	USAGE
fi

### EXECUTION

CHECKDEPENDENCIES
SETPOSITION
GENREPORT
